[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISSS608-VAA",
    "section": "",
    "text": "Welcome to my portfolio for  Visual Analytics and Applications module in Singapore Management University. In this website, you will find my coursework prepared for this course. My coursework will be under the Take-home Exercise"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "The code below uses p_load() of pacman package to check if tidyverse packages are installed in the computer. If they are, then they will be launched.\n\npacman::p_load(tidyverse)\n\nImporting the data\n\nexam_data &lt;- read_csv(\"Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\nPlotting a simple bar chart to test if it works.\n\nggplot(data=exam_data, aes(x=RACE)) + geom_bar()\n\n\n\n\n\n\n\n\n\n\n\nGrammar of Graphics defined by Leeland Wilkinson (1999) to be framework that follows a layered approach to descrive and construct visualization. ggplot2 applies the grammar of graphics:\n![7 layers of grammar of graphics](7_layer_of_ggplot2.png)\n\nData: dataset that’s being plotted\nAesthetics: properties that can be perceived on the graphics\nGeometrics: visual elements used for data (e.g. point, bar or line).\nFacets: how to break up and display subset of data as small multiples (conditioning or latticing)\nStatistics: statistical transformation that summarizes data (e.g. mean or confidence intervals)\nCoordinate systems: describes how data coordinates are mapped to the plane of graphic\nThemes: controls display part of the visualization (main title, sub-title, y-axis title and legend).\n\n\n\n\nFirst we will explore geom_bar, which is used to plot bar charts. Here is how the code looks like and the graph:\n\nggplot(data=exam_data, aes(x=RACE))+geom_bar()\n\n\n\n\n\n\n\n\nNext, we’ll be exploring dot plots (geom_dotplot). It’s quite similar to bar chart but in dot form instead of a bar. But it may not always be the most useful graph, as it leaves out y-axis values.\n\nggplot(data=exam_data, aes(x=MATHS))+geom_dotplot(binwidth=2.5, dotsize=0.5) + scale_y_continuous(NULL, breaks=NULL)\n\n\n\n\n\n\n\n\nNext, geom_histogram plots a histogram. But it’s possible to stack different categorical values to compare distributions of each variable like below:\n\nggplot(data=exam_data, \n       aes(x = MATHS, fill = GENDER)) +\n  geom_histogram(bins=20, color=\"grey30\")  \n\n\n\n\n\n\n\n\nGeom_density is used to draw density estimate, which is a smoother version of a histogram. Similar to the histogram, you can stack different variables.\n\nggplot(data=exam_data, \n       aes(x = MATHS, colour=GENDER)) +\n  geom_density()    \n\n\n\n\n\n\n\n\nGeom_boxplot is used to plot boxplot.\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +    \n  geom_boxplot(notch=TRUE)   \n\n\n\n\n\n\n\n\nGeom_violin is used to plot a violin plot as a compact display of continuous distribution (similar to boxplot).\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_violin()\n\n\n\n\n\n\n\n\nGeom_point is used to plot scatterplot.\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point()      \n\n\n\n\n\n\n\n\nIt’s also possible to plot two different geometry objects at the same graph. In this example, I’ll be plotting boxplot and scatterplot at the same graph. It is done by just adding ‘+’ after the first geom object.\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\ngeom_boxplot() +          geom_point(position=\"jitter\", size = 0.5)  \n\n\n\n\n\n\n\n\n\n\nIncorporating stats_summary after geom object reveal statistic summary, such as average, median, max or min. In this example, the function mean is used:\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  stat_summary(geom =\"point\", fun = \"mean\",    colour =\"red\", size=4)     \n\n\n\n\n\n\n\n\nAdding best fit line is possible by using the function geom_smooth:\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \nlinewidth=0.5)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n\n\n\n\nFacet generate small multiple trellis plot, which display different subset of data. There are two types of facet: facet_wrap and facet_grid\nFacet_wrap is used to wrap 1-dimension sequence of panels into 2-dimension. So this creates multiple plot for one variable like below:\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20) +\n    facet_wrap(~ CLASS)\n\n\n\n\n\n\n\n\nFacet_grid is used to create a grid of panels using one or two variables.\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20) +\n    facet_grid(~ CLASS)\n\n\n\n\n\n\n\n\n\n\n\nThere are different types of coordinates available such as: coord_cartesian(), coord_flip(), coord_fixed() and coord_quickmap().\nCoord_flip is used to flip horizontal bars into vertical bars.\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip()\n\n\n\n\n\n\n\n\n\n\nChanging the range of y and x-axis can be done by specifying xlim and ylim in the coordinate object.\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \nlinewidth=0.5) + \n  coord_cartesian(xlim=c(0,100),\nylim=c(0,100))\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n\n\n\n\nThere are a lot of different ways to beautify graphs. Themes are one way to add aesthetic to the graphs, as it affects background color, size of fonts, gridline and color of labels. Different themes will affect the look of the graph. In this example, I used the minimal theme:\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_minimal()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#install-and-launch-r-packages",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#install-and-launch-r-packages",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "The code below uses p_load() of pacman package to check if tidyverse packages are installed in the computer. If they are, then they will be launched.\n\npacman::p_load(tidyverse)\n\nImporting the data\n\nexam_data &lt;- read_csv(\"Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\nPlotting a simple bar chart to test if it works.\n\nggplot(data=exam_data, aes(x=RACE)) + geom_bar()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#exploring-different-geometric-objects",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#exploring-different-geometric-objects",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "First we will explore geom_bar, which is used to plot bar charts. Here is how the code looks like and the graph:\n\nggplot(data=exam_data, aes(x=RACE))+geom_bar()\n\n\n\n\n\n\n\n\nNext, we’ll be exploring dot plots (geom_dotplot). It’s quite similar to bar chart but in dot form instead of a bar. But it may not always be the most useful graph, as it leaves out y-axis values.\n\nggplot(data=exam_data, aes(x=MATHS))+geom_dotplot(binwidth=2.5, dotsize=0.5) + scale_y_continuous(NULL, breaks=NULL)\n\n\n\n\n\n\n\n\nNext, geom_histogram plots a histogram. But it’s possible to stack different categorical values to compare distributions of each variable like below:\n\nggplot(data=exam_data, \n       aes(x = MATHS, fill = GENDER)) +\n  geom_histogram(bins=20, color=\"grey30\")  \n\n\n\n\n\n\n\n\nGeom_density is used to draw density estimate, which is a smoother version of a histogram. Similar to the histogram, you can stack different variables.\n\nggplot(data=exam_data, \n       aes(x = MATHS, colour=GENDER)) +\n  geom_density()    \n\n\n\n\n\n\n\n\nGeom_boxplot is used to plot boxplot.\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +    \n  geom_boxplot(notch=TRUE)   \n\n\n\n\n\n\n\n\nGeom_violin is used to plot a violin plot as a compact display of continuous distribution (similar to boxplot).\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_violin()\n\n\n\n\n\n\n\n\nGeom_point is used to plot scatterplot.\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point()      \n\n\n\n\n\n\n\n\nIt’s also possible to plot two different geometry objects at the same graph. In this example, I’ll be plotting boxplot and scatterplot at the same graph. It is done by just adding ‘+’ after the first geom object.\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\ngeom_boxplot() +          geom_point(position=\"jitter\", size = 0.5)  \n\n\n\n\n\n\n\n\n\n\nIncorporating stats_summary after geom object reveal statistic summary, such as average, median, max or min. In this example, the function mean is used:\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  stat_summary(geom =\"point\", fun = \"mean\",    colour =\"red\", size=4)     \n\n\n\n\n\n\n\n\nAdding best fit line is possible by using the function geom_smooth:\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \nlinewidth=0.5)\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#exploring-facet-object",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#exploring-facet-object",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "Facet generate small multiple trellis plot, which display different subset of data. There are two types of facet: facet_wrap and facet_grid\nFacet_wrap is used to wrap 1-dimension sequence of panels into 2-dimension. So this creates multiple plot for one variable like below:\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20) +\n    facet_wrap(~ CLASS)\n\n\n\n\n\n\n\n\nFacet_grid is used to create a grid of panels using one or two variables.\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20) +\n    facet_grid(~ CLASS)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#exploring-coordinates",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#exploring-coordinates",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "There are different types of coordinates available such as: coord_cartesian(), coord_flip(), coord_fixed() and coord_quickmap().\nCoord_flip is used to flip horizontal bars into vertical bars.\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip()\n\n\n\n\n\n\n\n\n\n\nChanging the range of y and x-axis can be done by specifying xlim and ylim in the coordinate object.\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \nlinewidth=0.5) + \n  coord_cartesian(xlim=c(0,100),\nylim=c(0,100))\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#aesthetic-in-r",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#aesthetic-in-r",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "There are a lot of different ways to beautify graphs. Themes are one way to add aesthetic to the graphs, as it affects background color, size of fonts, gridline and color of labels. Different themes will affect the look of the graph. In this example, I used the minimal theme:\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_minimal()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#grammar-of-graphics",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#grammar-of-graphics",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "Grammar of Graphics defined by Leeland Wilkinson (1999) to be framework that follows a layered approach to descrive and construct visualization. ggplot2 applies the grammar of graphics:\n![7 layers of grammar of graphics](7_layer_of_ggplot2.png)\n\nData: dataset that’s being plotted\nAesthetics: properties that can be perceived on the graphics\nGeometrics: visual elements used for data (e.g. point, bar or line).\nFacets: how to break up and display subset of data as small multiples (conditioning or latticing)\nStatistics: statistical transformation that summarizes data (e.g. mean or confidence intervals)\nCoordinate systems: describes how data coordinates are mapped to the plane of graphic\nThemes: controls display part of the visualization (main title, sub-title, y-axis title and legend)."
  }
]