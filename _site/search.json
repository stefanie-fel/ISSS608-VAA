[
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#install-and-load-libraries",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#install-and-load-libraries",
    "title": "Hands-on Exercise 2",
    "section": "Install and Load Libraries",
    "text": "Install and Load Libraries\n\npacman::p_load(ggrepel, patchwork, ggthemes, hrbrthemes, tidyverse)\n\nIn this exercise, the following libraries will be used :\n\ntidyverse: R package that loads data science packages (usually used for data wrangling, analysis and visualization purposes)\nggrepel: R package that provide geom object to prevent overlapping text labels\npatchwork: R package that allows combination of ggplot2 graphs to be plotted in single layout\nhrbrthemes: R package that provide typography-centric themes and themes components in ggplot2\nggthemes: R package that provide more themes, geoms and scales for ggplot2\n\nImport Data\n\nexam_data &lt;- read_csv(\"Exam_data.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#ggrepel-package",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#ggrepel-package",
    "title": "Hands-on Exercise 2",
    "section": "ggrepel Package",
    "text": "ggrepel Package\nIt replaces geom_text with geom_text_repel and geom_label with geom_label_repel. In this example, a graph of primary 3 students’ maths and english scores were plotted using geom_label.\n\nggplot(data=exam_data, aes(x= MATHS, y=ENGLISH)) +\ngeom_point() +\ngeom_smooth(method=lm, \nlinewidth=0.5) +  \ngeom_label(aes(label = ID), \nhjust = .5, vjust = -.5) +\ncoord_cartesian(xlim=c(0,100),\nylim=c(0,100)) +\nggtitle(\"English scores versus Maths scores for Primary 3\")\n\n\n\n\n\n\n\n\nBut as can be seen, the data points looks cluttered and overlap with each other. But when we replace the geom_label with geom_label_repel, this is how the graph looks like:\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +    geom_point() + \n  geom_smooth(method=lm, linewidth=0.5) +  geom_label_repel(aes(label = ID), \nfontface = \"bold\") + coord_cartesian(xlim=c(0,100),               ylim=c(0,100)) + ggtitle(\"English scores versus Maths scores for Primary 3\")\n\n\n\n\n\n\n\n\nThe graph looks better as there’s no more overlapping labels so that the graph becomes clearer."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#ggtheme-package",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#ggtheme-package",
    "title": "Hands-on Exercise 2",
    "section": "ggtheme Package",
    "text": "ggtheme Package\nWhen using ggplot2, we can customize how the graph looks like as ggplot2 offers in-built themes (e.g. theme_gray, theme_bw, theme_classic, theme_dark, theme_light, theme_linedraw, theme_minimal and theme_void). For more information about themes in ggtheme, click here. In this example, theme_gray is used, which looks like this:\n\nggplot(data=exam_data, aes(x = MATHS)) + geom_histogram(bins=20, boundary = 100, color=\"grey25\", fill=\"grey90\") + theme_gray() + ggtitle(\"Distribution of Maths scores\") \n\n\n\n\n\n\n\n\nHowever, ggtheme package offers more than just basic themes. It also has professional-looking themes that are aesthetically more pleasing for presentation. In this example, the `theme_economist` is used:\n\nggplot(data=exam_data, aes(x = MATHS)) + geom_histogram(bins=20, boundary = 100,         color=\"grey25\", fill=\"grey90\") + ggtitle(\"Distribution of Maths scores\") + theme_economist()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#hrbthems-package",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#hrbthems-package",
    "title": "Hands-on Exercise 2",
    "section": "hrbthems Package",
    "text": "hrbthems Package\nhrbthems package provides a base theme that focus on typographic elements (incl. where labels are placed and fonts)\n\nggplot(data=exam_data, \naes(x = MATHS)) +\ngeom_histogram(bins=20, \nboundary = 100,\ncolor=\"grey25\", \nfill=\"grey90\") +\nggtitle(\"Distribution of Maths scores\") +\ntheme_ipsum(axis_title_size = 18,\nbase_size = 15,\ngrid = \"Y\")\n\n\n\n\n\n\n\n\nThe code above uses the following arguments:\n\naxis_title_size is used to increase font size\nbase_size is used to increase default axis label\ngrid is used to remove grid line"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#plotting-beyond-1-graph",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#plotting-beyond-1-graph",
    "title": "Hands-on Exercise 2",
    "section": "Plotting Beyond 1 Graph",
    "text": "Plotting Beyond 1 Graph\nHow can we combine different graphs into one ? For example, we want to compare students’ math scores, english scores and combination of english and math scores. How can we plot them into one ?\n\np1 &lt;- ggplot(data=exam_data, aes(x = MATHS)) +\ngeom_histogram(bins=20, \nboundary = 100,\ncolor=\"grey25\", \nfill=\"grey90\") + coord_cartesian(xlim=c(0,100)) +\nggtitle(\"Distribution of Maths scores\")\np1\n\n\n\n\n\n\n\n\n\np2 &lt;- ggplot(data=exam_data, aes(x = ENGLISH)) +\ngeom_histogram(bins=20, \nboundary = 100, color=\"grey25\", fill=\"grey90\") +\ncoord_cartesian(xlim=c(0,100)) +\nggtitle(\"Distribution of English scores\")\np2\n\n\n\n\n\n\n\n\n\np3 &lt;- ggplot(data=exam_data, aes(x= MATHS, y=ENGLISH)) +\ngeom_point() +\ngeom_smooth(method=lm, \nsize=0.5) +  \ncoord_cartesian(xlim=c(0,100),                ylim=c(0,100)) +\nggtitle(\"English scores versus Maths scores for Primary 3\")\np3\n\n\n\n\n\n\n\n\nWe end up with 3 individual graphs. But with patchwork, we can combine separate graphs into 1. Few syntax used to combine graphs:\n\n\\(+\\) sign is used to combine two-column layout.\n\\(()\\) sign is used to create subplot group\n\\(/\\) sign is used to build two-row layout.\n\\(|\\) sign is used to place graphs beside each other.\nThe code below combines two graph into one row, side by side.\n\n\np1 + p2\n\n\n\n\n\n\n\n\nWhile this code chunk plots p1 to be above p2, and p3 to be beside both plots.\n\n(p1 / p2) | p3\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIt’s also possible to add annotation in patchwork using plot_annotation\n\n\n\n\n((p1 / p2)|p3) + plot_annotation(tag_levels = 'I')\n\n\n\n\n\n\n\n\n\n\n\nAdding Another Graph in a Graph\nWe can add another graph anywhere within a graph using inset-element() of patchwork package.\n\np3 + inset_element(p2, \n                   left = 0.01, \n                   bottom = 0.7, \n                   right = 0.5, \n                   top = 1)\n\n\n\n\n\n\n\n\n\n\nUsing patchwork and ggtheme Together\nIt’s possible to combine your graphs while applying theme to it like below.\n\npatchwork &lt;- (p1 / p2) | p3\npatchwork & theme_economist()"
  }
]