{
  "hash": "fe322e3636cc216a656fa125ee4234db",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Hands-on_Ex06\"\nauthor: \"Stefanie Felicia\"\ndate: \"May, 20 2025\"\ndate-modified: \"last-modified\"\nexecute: \n  eval: true\n  echo: true\n  warning: false\n  freeze: true\n---\n\n\n\n## Getting Started\n\nObjective of this exercise:\n\n-   Plot calender heatmap using ggplot2\n\n-   Plot cycle plot using ggplot2\n\n-   Plot slopegraph\n\n-   Plot horizon chart\n\n## Import Libraries\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(scales, viridis, lubridate, ggthemes,\n               gridExtra, readxl, knitr, data.table,\n               CGPfunctions, ggHoriPlot, tidyverse)\n```\n:::\n\n\n\nThe libraries used in this exercise would be:\n\n-   scales\n\n-   viridis: color maps that are designed to improve graph readability\n\n-   lubridate\n\n-   ggthemes\n\n-   gridExtra: provide user-level functions to work with \"grid\" graphics and arrange multiple grid-based plots ona page\n\n-   readxl: read Excel files\n\n-   knitr\n\n-   data.table: extension of data.frame, which can aggregate large data (100 GB in RAM), orderd joins, add or modify or delete columns\n\n-   CGPFunctions\n\n-   ggHoriPlot: allows user to build horisonplot\n\n-   tidyverse\n\n## Import Data\n\nIn this exercise, we'll be using data file that consist of 199K rows of time-series cyber attack records by country.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nattacks <- read_csv(\"data/eventlog.csv\")\n```\n:::\n\n\n\nData Structure of Dataset\n\nFirst, we'll check the structure of data frame before analysis using kable.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nkable(head(attacks))\n```\n\n::: {.cell-output-display}\n\n\n|timestamp           |source_country |tz              |\n|:-------------------|:--------------|:---------------|\n|2015-03-12 15:59:16 |CN             |Asia/Shanghai   |\n|2015-03-12 16:00:48 |FR             |Europe/Paris    |\n|2015-03-12 16:02:26 |CN             |Asia/Shanghai   |\n|2015-03-12 16:02:38 |US             |America/Chicago |\n|2015-03-12 16:03:22 |CN             |Asia/Shanghai   |\n|2015-03-12 16:03:45 |CN             |Asia/Shanghai   |\n\n\n:::\n:::\n\n\n\nThe data frame consist of 3 columns:\n\n-   timestamp: contain the date-time value in POSIXct format\n\n-   source_country: contain country source of attack\n\n-   tz: contain the timezone fo the source of IP address\n\n## Data Preparation\n\nWe'll be deriving *weekday* and *hour of day* columns.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmake_hr_wkday <- function(ts, sc, tz) {\n  real_times <- ymd_hms(ts, \n                        tz = tz[1], \n                        quiet = TRUE)\n  dt <- data.table(source_country = sc,\n                   wkday = weekdays(real_times),\n                   hour = hour(real_times))\n  return(dt)\n  }\n```\n:::\n\n\n\n::: {.callout-note}\n-   `...function(ts, sc, tz)` : uses ts, sc and tz as inputs to the function\n\n-   `ymd_hms(ts,tz = tz[1], quiet = TRUE)` : convert ts into proper datetime object using ymd_hms() from lubridate library\n\n-   `tz =tz[1]` : set timezone\n\n-   `quiet = TRUE` : suppress warning for parsing failure\n\n-   dt table is then created using data.table library with transformed columns\n:::\n\nPlot Calendar Heatmap\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}