{
  "hash": "1318b0a293f2823ea40f3bc1aeb360c6",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Hands-on Exercise 2\"\nauthor: \"Stefanie Felicia\"\ndate: \"April 23, 2025\"\ndate-modified: \"last-modified\"\nexecute: \n  eval: true\n  echo: true\n  warning: false\n  freeze: true\n---\n\n\n\n## Getting Started\n\n## Install and Load Libraries\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(ggrepel, patchwork, ggthemes, hrbrthemes, tidyverse)\n```\n:::\n\n\n\nIn this exercise, the following libraries will be used :\n\n1.  tidyverse: R package that loads data science packages (usually used for data wrangling, analysis and visualization purposes)\n\n2.  ggrepel: R package that provide geom object to prevent overlapping text labels\n\n3.  patchwork: R package that allows combination of ggplot2 graphs to be plotted in single layout\n\n4.  hrbrthemes: R package that provide typography-centric themes and themes components in ggplot2\n\n5.  ggthemes: R package that provide more themes, geoms and scales for ggplot2\n\nImport Data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nexam_data <- read_csv(\"Exam_data.csv\")\n```\n:::\n\n\n\n## ggrepel Package\n\nIt replaces **`geom_text`** with **`geom_text_repel`** and **`geom_label`** with **`geom_label_repel`**. In this example, a graph of primary 3 students' maths and english scores were plotted using `geom_label`.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=exam_data, aes(x= MATHS, y=ENGLISH)) +\ngeom_point() +\ngeom_smooth(method=lm, \nlinewidth=0.5) +  \ngeom_label(aes(label = ID), \nhjust = .5, vjust = -.5) +\ncoord_cartesian(xlim=c(0,100),\nylim=c(0,100)) +\nggtitle(\"English scores versus Maths scores for Primary 3\")\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n\nBut as can be seen, the data points looks cluttered and overlap with each other. But when we replace the geom_label with geom_label_repel, this is how the graph looks like:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +    geom_point() + \n  geom_smooth(method=lm, size=0.5) +  geom_label_repel(aes(label = ID), \nfontface = \"bold\") + coord_cartesian(xlim=c(0,100),               ylim=c(0,100)) + ggtitle(\"English scores versus Maths scores for Primary 3\")\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n\nThe graph looks better as there's no more overlapping labels so that the graph becomes clearer.\n\n## ggtheme Package\n\nWhen using ggplot2, we can customize how the graph looks like as ggplot2 offers in-built themes (e.g. `theme_gray`, `theme_bw`, `theme_classic`, `theme_dark`, `theme_light`, `theme_linedraw`, `theme_minimal` and `theme_void`). For more information about themes in ggtheme, click <a href = https://ggplot2.tidyverse.org/reference/ggtheme.html>here</a>. In this example, `theme_gray` is used, which looks like this:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=exam_data, aes(x = MATHS)) + geom_histogram(bins=20, boundary = 100, color=\"grey25\", fill=\"grey90\") + theme_gray() + ggtitle(\"Distribution of Maths scores\") \n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n\nHowever, ggtheme package offers more than just basic themes. It also has professional-looking themes that are aesthetically more pleasing for presentation. In this example, the \\`theme_economist\\` is used:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=exam_data, aes(x = MATHS)) + geom_histogram(bins=20, boundary = 100,         color=\"grey25\", fill=\"grey90\") + ggtitle(\"Distribution of Maths scores\") + theme_economist()\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n\n## hrbthems Package\n\nhrbthems package provides a base theme that focus on typographic elements (incl. where labels are placed and fonts)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=exam_data, \naes(x = MATHS)) +\ngeom_histogram(bins=20, \nboundary = 100,\ncolor=\"grey25\", \nfill=\"grey90\") +\nggtitle(\"Distribution of Maths scores\") +\ntheme_ipsum(axis_title_size = 18,\nbase_size = 15,\ngrid = \"Y\")\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n\nThe code above uses the following arguments:\n\n-   `axis_title_size` is used to increase font size\n\n-   `base_size` is used to increase default axis label\n\n-   `grid` is used to remove grid line\n\n## Plotting Beyond 1 Graph\n\nHow can we combine different graphs into one ? For example, we want to compare students' math scores, english scores and combination of english and math scores. How can we plot them into one ?\n\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\np1\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\np2\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\np3\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\n\nWe end up with 3 individual graphs. But with **patchwork**, we can combine separate graphs into 1. Few syntax used to combine graphs:\n\n-   $+$ sign is used to combine two-column layout.\n\n-   $()$ sign is used to create subplot group\n\n-   $/$ sign is used to build two-row layout.\n\n-   $|$ sign is used to place graphs beside each other.\n\n    The code below combines two graph into one row, side by side.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\np1 + p2\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\n\nWhile this code chunk plots *p1* to be above *p2*, and p3 to be beside both plots.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n(p1 / p2) | p3\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\n\n::: callout-tip\n## It's also possible to add annotation in patchwork using plot_annotation\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n((p1 / p2)|p3) + plot_annotation(tag_levels = 'I')\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n\n:::\n\n### Adding Another Graph in a Graph\n\nWe can add another graph anywhere within a graph using **inset-element()** of patchwork package.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\np3 + inset_element(p2, \n                   left = 0.02, \n                   bottom = 0.7, \n                   right = 0.5, \n                   top = 1)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n\n\n### Using patchwork and ggtheme Together\n\nIt's possible to combine your graphs while applying theme to it like below.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npatchwork <- (p1 / p2) | p3\npatchwork & theme_economist()\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-18-1.png){width=1344}\n:::\n:::\n",
    "supporting": [
      "Hands-on_Ex02_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}