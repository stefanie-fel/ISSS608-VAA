---
title: "Take-home Exercise 2"
author: "Stefanie Felicia"
date: "May, 12 2025"
date-modified: "last-modified"
execute: 
  eval: true
  echo: true
  warning: false
  freeze: true
---

## 1. Background

Over the past decade, the community of Oceanus has undergone transformations and challenges evolving from its fishing-centric origins. (there used to be illegal fishing but now these ppl has shifting on to another investment e.g. ocean tourism industry which makes a growing tension.) with teh growing tourism, it attracted interntaional pop star Sailor Shift (who wanted to shoot his/her new mv in the island).

\
Clepper Jensen is a former analyst at FishEye company who is new a seasoned journalist for Hecklee Herald, is observing the tension and recently looking at temporary closure of Nemo Reef. By using investigative tools and radio communication, he uncovered a complex web of expedited approvals and secretive logistics -\> this reveals story involving high-level Oceanus officials, Sailor Shift's team, local influential families adn local conservationist group (the Green Guardians) - this is a story of corruption and manipulation.

**Your task is to develop new and novel visualizations and visual analytics approaches to help Clepper get to the bottom of this story.**

### 1.2 Objective

Objective of this exercise:

Clepper diligently recorded all intercepted radio communications over the last two weeks. With the help of his intern, they have analyzed their content to identify important events and relationships between key players. The result is a knowledge graph describing the last two weeks on Oceanus. Clepper and his intern have spent a large amount of time generating this knowledge graph, and they would now like some assistance using it to answer the following questions.

1.  Clepper has noticed that people often communicate with (or about) the same people or vessels, and that grouping them together may help with the investigation.

    1.  Use visual analytics to help Clepper understand and explore the interactions and relationships between vessels and people in the knowledge graph.

    2.  Are there groups that are more closely associated? If so, what are the topic areas that are predominant for each group?

        -   For example, these groupings could be related to: Environmentalism (known associates of Green Guardians), Sailor Shift, and fishing/leisure vessels.

2.  Clepper suspects that Nadia Conti, who was formerly entangled in an illegal fishing scheme, may have continued illicit activity within Oceanus

    1.  Through visual analytics, provide evidence that Nadia is, or is not, doing something illegal

    2.  Summarize Nadia’s actions visually. Are Clepper’s suspicions justified?

### 1.3 The Data

### 1.4 Load Required Libraries

```{r}
pacman::p_load(tidyverse, jsonlite, SmartEDA, tidygraph, ggraph, knitr)
```

The libraries used in this exercise are the following:

```{r, echo=FALSE}
table_data <- matrix(
  c("jsonlite",      "Convert JSON data to R objects",
    "tidyverse",  "Provide key data transformation functions",
    "SmartEDA",     "Help in getting the complete exploratory data analysis by running the function instead of writing long R codes", 
    "tidygraph",    "Provides tidy API for network or graph manipulation",
    "ggraph", "Extension of the ggplot2 API tailored to graph visualizations", 
    "knitr",  "Provides a tool for dynamic report generation"), 
  nrow = 6,
  byrow = TRUE
)

kable(table_data, col.names = c("Package Name", "Description"))
```

-   tidyverse

-   jsonlite: convert JSON data to R objects

-   SmartEDA: help in getting the complete exploratory data analysis by running the function instead of writing long R codes.

-   tidygraph

-   ggraph

### 1.5 Import Data

In this exercise, we'll be using the mc3.json file and extract data using the jsonlite library.

```{r}
MC3 <- fromJSON("data/MC3_graph.json")
MC3_schema <- fromJSON("data/MC3_schema.json")
```

## Inspect Knowledge Graph Structure

Before preparing the data, we'll check the structure of the knowledge graph.

```{r}
glimpse(MC3)
```

Since the industry column is in list data type, we'' exclude the column since list data type isn't acceptable by `tbl_graph()`.

## Extract Edges and Nodes Tables

The `as_tibble()` function is used to extract nodes and links tibble data frame from MC3 tibble data frame.

```{r}
mc3_nodes <- as_tibble(MC3$nodes)
mc3_edges <- as_tibble(MC3$edges)
```

## Initial EDA

We'll use `ExpCatViz()` from SmartEDA library to reveal frequency distribution of all categorical fields from mc3_nodes.

```{r}
ExpCatViz(data=mc3_nodes,
          col="lightblue")
```

## Data Cleaning and Wrangling

The following steps are taken to clean the **nodes**:

-   Convert values in id into character data type

-   Exclude record with id that are missing

-   Exclude records with similar id values

-   Exclude *thing_collected* field

```{r}
mc3_nodes_cleaned <- mc3_nodes %>%
  mutate(id = as.character(id)) %>%
  filter(!is.na(id)) %>%
  distinct(id, .keep_all = TRUE) %>%
  select(-thing_collected)
```

Next, the following steps are taken to clean the **edges**:

-   Rename source *column* into *from_id* and *target* column into *to_id*

-   Convert values in *from_id* and *to_id* column into character data type

-   Exclude values in from_id and to_id that's not found in the id column from *mc3_nodes_cleaned*

-   Exclude records where *from_id* and *to_id*, or *from_id* or *to_id* is missing

```{r}
    mc3_edges_cleaned <- mc3_edges %>%
      rename(from_id = source, 
             to_id = target) %>%
      mutate(across(c(from_id, to_id), 
                    as.character)) %>%
      filter(from_id %in% mc3_nodes_cleaned$id, 
             to_id %in% mc3_nodes_cleaned$id) %>%
      filter(!is.na(from_id), !is.na(to_id))
```

A new dataframe from the existing data frame (*mc3_nodes_cleaned*) and *.row_id* column is added which assigns unique row number to each row number (works like row index). Then we select *id* and .*row_id* columns whereas other columns are dropped.

```{r}
node_index_lookup <- mc3_nodes_cleaned %>%
  mutate(.row_id = row_number()) %>%
  select(id, .row_id)
```

Then from_id and to_id columns in mc_edges_indexed are converted ito integer indices. The rows with unmatched nodes are also dropped.

```{r}
mc3_edges_indexed <- mc3_edges_cleaned %>%
  left_join(node_index_lookup, 
            by = c("from_id" = "id")) %>%
  rename(from = .row_id) %>%
  left_join(node_index_lookup, 
            by = c("to_id" = "id")) %>%
  rename(to = .row_id) %>%
  select(from, to, is_inferred, type) %>%
  filter(!is.na(from) & !is.na(to))  
```

Next, the node list will only include nodes that are used in the edge list and new indices are assigned

```{r}
used_node_indices <- sort(
  unique(c(mc3_edges_indexed$from, 
           mc3_edges_indexed$to)))

mc3_nodes_final <- mc3_nodes_cleaned %>%
  slice(used_node_indices) %>%
  mutate(new_index = row_number())
```

The lookup is rebuild from old index to new index.

```{r}
old_to_new_index <- tibble(
  old_index = used_node_indices,
  new_index = seq_along(
    used_node_indices))
```

Then, we'll update edge indices to match new node table

```{r}
mc3_edges_final <- mc3_edges_indexed %>%
  left_join(old_to_new_index, 
            by = c("from" = "old_index")) %>%
  rename(from_new = new_index) %>%
  left_join(old_to_new_index, 
            by = c("to" = "old_index")) %>%
  rename(to_new = new_index) %>%
  select(from = from_new, to = to_new, 
         is_inferred, type)
```

## Build tidygraph Object

We'll build the tidygraph object

```{r}
mc3_graph <- tbl_graph(
  nodes = mc3_nodes_final,
  edges = mc3_edges_final,
  directed = TRUE
)
```

```{r}
str(mc3_graph)
```

Visualize Knowledge Graph

```{r}
set.seed(1234)
```

```{r}
ggraph(mc3_graph, 
       layout = "fr") +
  geom_edge_link(alpha = 0.3, 
                 colour = "gray") +
  geom_node_point(aes(color = `type`), 
                  size = 4) +
  geom_node_text(aes(label = type), 
                 repel = TRUE, 
                 size = 2.5) +
  theme_void()
```
