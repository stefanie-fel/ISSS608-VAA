---
title: "Take-home_Ex01"
author: "Stefanie Felicia"
date: ""
date-modified: "last-modified"
execute: 
  eval: true
  echo: true
  warning: false
  freeze: true
---

# 1. Background

background of what I'm doing and objective of the analysis

A local online media company that publishes daily content on digital platforms is planning to release an article on **demographic structures and distribution of Singapore in 2024**.

## 1.2 The Data

The dataset was extracted from <a href = https://www.singstat.gov.sg/find-data/search-by-theme/population/geographic-distribution/latest-data>Singstat</a> under the name <b>Singapore Residents by Planning Area / Subzone, Single Year of Age and Sex, June 2024</b>.

![](images/screenshot_dataset.png)

It comprised of 6 variables and 60K records. The dataset recorded the demographics and count of residents who lived in each sub zone and planning area in June 2024.

## 1.3 Load Required Libraries

```{r}
pacman::p_load(dplyr, tidyverse, scales, forcats, DT)
```

## 1.4 Import Data

```{r, message=TRUE}
population_data <- read_csv("respopagesex2024.csv")
```

As can be seen above, the data set comprise of 6 variables: 4 variables are character data type (namely, PA, SZ, age and sex), and 2 variables are double data type (number of population, time). Here is the a snippet of the data set:

```{r}
head(population_data)
```

# 2. Data pre-processing

First, we will look if there are duplicates found in the data set.

```{r}
nrow(population_data[duplicated(population_data), ])
```

Next, we will check for missing values in the data set.

```{r}
sapply(population_data, function(x) sum(is.na(x)))
```

## 2.1 Column Transformation

::: panel-tabset
## Age

Currently, the Age variable is in string data type and we want to change it to numeric data type.

```{r}
population_data$Age[population_data$Age == "90_and_Over"] <- "90"
typeof(population_data$Age) 
population_data$Age <- as.numeric(population_data$Age)
```

## Sex

We also want to recode the Sex variable from "Males" to 0 and "Females" to 1, why ?

```{r}
population_data$Sex[population_data$Sex == "Females"] <- "1"
population_data$Sex[population_data$Sex == "Males"] <- "0"
population_data$Sex <- as.numeric(population_data$Sex)
```
:::

Univariate

```{r}
ggplot(population_data, aes(x = factor(Sex))) +
  geom_bar(color = "grey30", fill = "steelblue") +
  scale_x_discrete(labels = c("0" = "Male", "1" = "Female")) +
  labs(x = "Gender", y = "Count", title = "Count of Records by Gender")
```

```{r}
ggplot(data=population_data, 
       aes(x = Age)) +
  geom_histogram(bins=20, color="gray30", fill="steelblue")+ 
  labs(title = "Age Distribution of Singapore Resident",
       x = "Age",
       y = "Count")
```

# Variable Selection

The following variables are used to create visualizations:

-   Population count (Pop):

-   Age:

-   Gender (Sex):

-   Planning Area (PA):

-   Subzone (SZ)

# 3. Visualization

## 3.1 Age and Gender Distribution of Singapore Residents

::: panel-tabset
## Graph

```{r, echo=FALSE, fig.height=8, fig.width=8}
population_data <- population_data %>%
  mutate(age_group = cut(Age, 
               breaks = c(seq(0, 90, 5), Inf),  
               right = FALSE, 
               include.lowest = TRUE,
               labels = c(paste(seq(0, 85, 5), seq(4, 89, 5), sep = "-"), "90+")),
             Sex = factor(Sex, levels = c(0, 1), labels = c("Male", "Female")),
    PopAdj = ifelse(Sex == "Male", -Pop, Pop)
  )
agg_data <- population_data %>%
  group_by(age_group, Sex) %>%
  summarise(Pop = sum(PopAdj), .groups = 'drop')
ggplot(agg_data, aes(x = age_group, y = Pop, fill = Sex)) +
  geom_bar(stat = "identity") +
  coord_flip() +
  labs(title = "Age-Sex Pyramid", x = "Age Group", y = "Population") +
  scale_y_continuous(labels = abs)
```

## Code

```{r, eval=FALSE}
population_data <- population_data %>%
  mutate(age_group = cut(Age, 
               breaks = c(seq(0, 90, 5), Inf),  
               right = FALSE, 
               include.lowest = TRUE,
               labels = c(paste(seq(0, 85, 5), seq(4, 89, 5), sep = "-"), "90+")),
             Sex = factor(Sex, levels = c(0, 1), labels = c("Male", "Female")),
    PopAdj = ifelse(Sex == "Male", -Pop, Pop)
  )
agg_data <- population_data %>%
  group_by(age_group, Sex) %>%
  summarise(Pop = sum(PopAdj), .groups = 'drop')
ggplot(agg_data, aes(x = age_group, y = Pop, fill = Sex)) +
  geom_bar(stat = "identity") +
  coord_flip() +
  labs(title = "Age-Sex Pyramid", x = "Age Group", y = "Population") +
  scale_y_continuous(labels = abs)
```
:::

Insight from the visualization:

-   Singapore has a higher economically active population (aged 15 – 65) than elderly (aged 65+) and young dependents (aged 0 – 14) in 2024. Thus, we can conclude that Singapore’s population has a stationary pyramid

-   Singapore also has roughly similar proportion of male to female population as well as similar age distribution between male and female.

-   The population also has a high number of young dependents, which reflects  a …..

## 3. 2 Population and Demographics of Residents Living in Each Planning Area

::: panel-tabset
## Graph

```{r, echo=FALSE, fig.height=10, fig.width=8}
pop_pa <- population_data %>%
  group_by(PA) %>%
  summarise(total_pop = sum(Pop))
pop_pa$PA <- fct_rev(factor(pop_pa$PA, levels = pop_pa$PA[order(pop_pa$total_pop, decreasing = TRUE)]))
ggplot(data = pop_pa, aes(x = PA, y = total_pop)) +
  geom_col(color = "gray30", fill = "steelblue") +
  labs(
    title = "Singapore Resident Population by Planning Area",
    x = "Planning Area",
    y = "Count"
  ) +
  scale_y_continuous(labels = label_comma())+ theme_minimal() +
  coord_flip()
```

## Code

```{r, eval=FALSE}
pop_pa <- population_data %>%
  group_by(PA) %>%
  summarise(total_pop = sum(Pop))
pop_pa$PA <- fct_rev(factor(pop_pa$PA, levels = pop_pa$PA[order(pop_pa$total_pop, decreasing = TRUE)]))
ggplot(data = pop_pa, aes(x = PA, y = total_pop)) +
  geom_col(color = "gray30", fill = "steelblue") +
  labs(
    title = "Singapore Resident Population by Planning Area",
    x = "Planning Area",
    y = "Count"
  ) +
  scale_y_continuous(labels = label_comma())+ theme_minimal() +
  coord_flip()
```
:::

Demographics of Residents Living in Each Planning Area

```{r}

population_binned <- population_data %>%
  mutate(age_group = cut(
    Age,
    breaks = c(seq(0, 90, 5), Inf),   # include 90+
    labels = c(paste(seq(0, 85, 5), seq(4, 89, 5), sep = "-"), "90+"),
    right = FALSE,
    include.lowest = TRUE
  )) %>%
  group_by(PA, age_group) %>%
  summarise(total_pop = sum(Pop), .groups = "drop")
population_binned_wide <- population_binned %>%
  pivot_wider(names_from = age_group, values_from = total_pop, values_fill = 0)
population_binned_wide
population_binned_wide %>%
  datatable(
    caption = "Population by Planning Area and Age Group",
    options = list(pageLength = 10)
  )
```

Inisght from visualization:

-   Most residents live in Tampines, Bedok, Sengkang, Jurong West, or Woodlands. With each planning area having more than 200,000 residents living in the planning area. This could be

-   In contrast, there are no residents who live in Western Island, Tuas, Straits View, Simpang or Pioneer.

-   A lot of younger population (aged 0 – 14) ;ive in Tampines, Sengkang. Punggol, Woodlands, Yishun or Jurong West

-   Elderly lived in Bedok, Bukit Merah, Ang Mo Kio, Toa Payoh, Hougang

-   Woodlands, Tampines, Jurong West, Bedok, Choa Chu Kang (25- 29)

-   Sengkang, Punggol, tampines, Jurong west (40-44)

# 4. References

1.  <a href=https://www.statology.org/r-count-duplicates/>How to Count Duplicates in R (With Examples)</a>
