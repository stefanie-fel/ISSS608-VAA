---
title: "In-class_Ex01"
author: "Stefanie Felicia"
date: "May, 17 2025"
date-modified: "last-modified"
execute: 
  eval: true
  echo: true
  warning: false
  freeze: true
---

```{r}
pacman::p_load(tidyverse, jsonlite, SmartEDA, tidygraph, ggraph)
```

```{r}
kg <- fromJSON("data/MC1_graph.json")
```

```{r}
str(kg, max.level=1)
```

```{r}
nodes_tbl <- as_tibble(kg$nodes)
edges_tbl <- as_tibble(kg$links)
```

```{r}
ggplot(data=edges_tbl, aes(y=`Edge Type`)) + geom_bar()
```

```{r}
id_map <- tibble(id=nodes_tbl$id, index=seq_len(nrow(nodes_tbl)))
```

```{r}
edges_tbl <- edges_tbl %>%
  left_join(id_map, by=c("source" = "id")) %>%
  rename(from=index) %>%
  left_join(id_map, by=c("target" = "id")) %>%
  rename(to=index)
```

```{r}
edges_tbl<- edges_tbl %>% 
  filter (!is.na(from), !is.na(to))
```

```{r}
graph <- tbl_graph(nodes = nodes_tbl, edges= edges_tbl, directed = kg$directed)
```

```{r}
set.seed(42)
```

```{r}
ggraph(graph, layout="fr") + 
  geom_edge_link(alpha=0.3,
                 colour="grey") +
  geom_node_point(aes(color='Node Type'), 
                  size=4) +
  geom_node_text(aes(label=name), 
                 repel=TRUE, 
                 size=2.5) +
  theme_void()
```

### Step 1: filter edges to only "Memberof"

```{r}
graph_memberof <- graph %>%
  activate(edges) %>%
  filter(`Edge Type` == "Memberof")
```

### Step 2: Extract only connected nodes (i.e. used in these edges)

```{r, eval=FALSE}
used_node_indices <- graph_memberof %>%
  activate(edges) %>%
  as_tibble(from, to) %>%
  unlist() %>%
  unique()
  
```

### Step 3: Keep only those nodes

```{r, eval=FALSE}
graph_memberof <- graph_memberof %>%
  activate(row_id) %>%
  mutate(row_id = row_number()) %>%
  filter(row_id %in% used_node_indices) %>%
  select(~row_id)
```

### Plot the sub-graph

```{r, eval=FALSE}
ggraph()
```
